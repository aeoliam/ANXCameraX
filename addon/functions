##################################################
# functions by @aeoliam
##################################################
#
# this file belongs to @aeoliam
# DO NOT CHANGE/MODIFY THIS FILE!
# most of my modules needs this functions to be working.
#
# catch me:
# GitHub   : github.com/aeoliam
# Telegram : t.me/aeoliam
#
# support me:
# Ko-Fi    : ko-fi.com/chikaryn
# trakteer : trakteer.id/chikaryn
# Youtube  : youtube.com/chikaryn
#
##################################################

























A=aeoliam
NOW=$(date +'%F %r %Z')

varlist() {
	echo -n "$1" | grep -v '#'
}

read_functions() {
	cat "$1" | grep '() {' | sed 's/() {//g' | egrep -v "\"|'"
}

read_prop() {
	cat "$2" | sed -n "s/^${1}=//p" | sed 's/"//g' | sed "s/'//g"

	#########################
	##### usage:
	# read_prop VAR /path/to/file
	##### example:
	# read_prop ID /etc/os-release
	#########################
}

write_prop() {
	awk -v var="^${1}=" -v val="${1}=${2}" '{ if ($0 ~ var) print val; else print $0; }' "$3" > "${3}.tmp"
	mv -f "${3}.tmp" "$3"

	#########################
	##### usage:
	# usage: write_prop VAR VALUE /path/to/file
	##### example:
	# write_prop VERSIOM 22.04 /project/package.prop
	#########################
}

mktouch() {
	mkdir -p "${1%/*}"
	touch "$1"
	printf "# Generated by @$A at $NOW" > "$1"
	chmod 644 "$1"
	chown 0:0 "$1"

	#########################
	##### usage:
	# mktouch $PATH/FILE
	##### example:
	# mktouch $MODPATH/.replace
	#########################
}

disable_app() {
	# allow restrictions
	mount /system &> /dev/null
	mount /vendor &> /dev/null
	setenforce 0 &> /dev/null
	# compability check
	if find $NVBASE/modules/$MODID -type 'f' -name '.replace' &> /dev/null; then
		touch $NVBASE/modules/$MODID/remove
		ui_print "! This module required fresh install!"
		abort "! Please reboot then install it again."
	fi
	# disable target package
	local target=$2
	local pkg_list=$(varlist "$1")
	for pkg in $pkg_list; do
		if [ "$(pm list packages -s | grep -o -i "$pkg")" != "" ]; then
			am force-stop "$pkg" &> /dev/null
			pm clear "$pkg" &> /dev/null
			pm uninstall "$pkg" &> /dev/null
			local path=$(pm path "$pkg" | grep -v '/data/app/' | sed 's|package:/||g' | sed 's|vendor|system/vendor|g')
			local path="${target}/${path%/*}"
			mktouch "${path}/.replace"
			ui_print "  - $pkg disabled."
		fi
	done
	
	#########################
	##### usage:
	# disable_app $pkglist $targetpath
	##### example:
	# disable_app $debloat_list $MODPATH
	#########################
}


rmfind() {
	if [ -z "$2" ]; then
		# remove empty directories
		find "$1" -type 'd' | while read result; do
			rm -df "$result" || rmdir -p "$result"
		done
		# remove empty files
		find "$1" -type 'f' | while read result; do
			zero=$(wc -c $result | sed "s| $result||g")
			[ $zero == 0 ] && rm -f "$result"
		done
	else
		find "$1" -type 'd,f' -iname "$2" | while read result; do
			rm -rf "$result"
		done
	fi

	#########################
	##### usage:
	# rmfind PATH
	##### example:
	# rmfind /sdcard/Android
	### or
	##### usage:
	# rmfind PATH FILENAME
	##### example:
	# rmfind /sdcard/Android '*.logs'
	#########################
}

# signature check
[ "$MODAUTH" != "@$A" ] && abort "! This module is modified!"

# run addons
chmod -R 0755 $TMPDIR/addon
for addon in $(find "${TMPDIR}/addon" -type 'f' -iname 'install.sh'); do
    . $addon
done
